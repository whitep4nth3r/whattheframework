---
import type { Framework } from "../data/types";
const { data } = Astro.props;
---

<style>
  .framework {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    flex-grow: 1;
    background: var(--card-bg);
    backdrop-filter: blur(1.25rem);
    border-radius: var(--card-border-radius);
    padding: var(--card-padding);
    text-decoration: none;
    color: var(--card-text-color);
    font-size: 1.5rem;
    font-weight: bold;
    line-height: calc(32 / 24);
    box-shadow: 0px 4px 8px -2px rgba(16, 24, 40, 0.1), 0px 2px 4px -2px rgba(16, 24, 40, 0.06);
    transition: all 0.42s ease-in-out;
  }

  a {
    display: block;
  }

  li {
    list-style: none;
    padding: 0 0.5rem 0.5rem 0.5rem;
    display: flex;
    flex-grow: 1;
    flex-direction: column;
  }

  .logo {
    height: 4rem;
    aspect-ratio: 1/1;
  }

  .logo img {
    height: 100%;
  }
</style>

<li class="framework" data-card data-features={data.features.map((feat: string) => feat).join(",")}>
  <div class="logo">
    <img src={`https://github.com/${data.meta.githubOrg}.png`} alt={data.meta.name} loading="lazy" />
  </div>
  <h2>{data.meta.name}</h2>

  <ul>
    {data.features.map((feature: string) => <span>{feature} </span>)}
    {data.usesFrameworks.length > 0 ?
      (<p>Uses frameworks</p>
      <span>{data.usesFrameworks.map((fw: Framework) => <span>{fw.meta.name} </span>)}</span>) : ""
    }
      {data.templatingEngines.length > 0 ?
      (<p>Templating engines</p><span>{data.templatingEngines.map((te: Framework) => <span>{te.meta.name} </span>)}</span>) : ""
    }
  </ul>

  <a href={data.meta.docsLink} target="_blank">Docs</a>
  <a href={`https://github.com/${data.meta.githubOrg}/${data.meta.githubRepo}`} target="_blank">GitHub</a>
</li>
