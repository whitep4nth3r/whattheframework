---
import Main from "../../layouts/Main.astro";
import AppType from "../../components/questions/AppType.astro";
import StartOver from "../../components/StartOver.astro";
import Validator from "../../utils/Validator";
import FrameworkOptions from "../../components/FrameworkOptions.astro";
import FrameworkSelector from "../../utils/FrameworkSelector";
import { WebsiteType } from "../../data/types";
import { SupportingInfo } from "../../data/supporting-info";
import { shuffle } from "../../utils/tools";
import QuestionCard from "../../components/questions/QuestionCard.astro";

const { params } = Astro;

if (!Validator.websiteType(params.websiteType)) {
  return Astro.redirect("/");
}

const options = FrameworkSelector({ websiteType: params.websiteType, appType: params.appType });

const topPicks = shuffle(options.filter((option) => option.websiteTypesInOrderOfPriority[0] === params.websiteType));

const otherPicks = shuffle(options.filter((option) => option.websiteTypesInOrderOfPriority[0] !== params.websiteType));

const headline = `ðŸ’¡ Your project may benefit from being a ${
  SupportingInfo.websiteType[params.websiteType as WebsiteType].name
} made up of ${SupportingInfo.websiteType[params.websiteType as WebsiteType].technology}.`;

const supporting =
  params.websiteType !== WebsiteType.Static ? "Do you want to build a Single-Page Application in JavaScript?" : "";
---

<Main>
  <QuestionCard headline={headline} supporting={supporting} />

  {params.websiteType !== WebsiteType.Static ? <AppType /> : ""}

  <FrameworkOptions options={topPicks} allowFilter={false} topPick={true} />
  <FrameworkOptions options={otherPicks} topPick={false} />

  <div style="margin-top: 100px;">
    <StartOver />
  </div>
</Main>
